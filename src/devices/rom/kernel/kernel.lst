F00:0001       ; elmerucr - 01/05/2020
F00:0002       ; compiles with vasmm68k_mot
F00:0003       
F00:0004       	INCLUDE 'kernel_definitions.asm'
F01:0001       ; E64 definitions - 2019-11-21 elmerucr
F01:0002       
F01:0003       KERNEL_LOC	equ	$FF0000
F01:0004       
F01:0005       VEC_04_ILLEGAL_INSTRUCTION		equ	$00000010
F01:0006       VEC_10_UNIMPL_INSTRUCTION		equ	$00000028
F01:0007       VEC_11_UNIMPL_INSTRUCTION		equ	$0000002C
F01:0008       VEC_26_LEVEL2_IRQ_AUTOVECT		equ	$00000068
F01:0009       VEC_27_LEVEL3_IRQ_AUTOVECT		equ	$0000006c
F01:0010       VEC_28_LEVEL4_IRQ_AUTOVECT		equ	$00000070
F01:0011       VEC_29_LEVEL5_IRQ_AUTOVECT		equ	$00000074
F01:0012       VEC_30_LEVEL6_IRQ_AUTOVECT		equ	$00000078
F01:0013       VEC_31_LEVEL7_IRQ_AUTOVECT		equ	$0000007C
F01:0014       
F01:0015       ; ascii definitions
F01:0016       ASCII_NULL	equ	$00
F01:0017       ASCII_LF	equ	$0A
F01:0018       
F01:0019       ; char rom
F01:0020       CHAR_ROM	equ	$FD0000
F01:0021       CHAR_RAM	equ	$E50000
F01:0022       
F01:0023       ; cia
F01:0024       CIA_BASE	equ	$FE0300
F01:0025       
F01:0026       ; timer
F01:0027       TIMER_BASE	equ	$FE0600
F01:0028       
F01:0029       ; vicv
F01:0030       VICV_BASE		equ	$FE0400 	; vicv base register
F01:0031       VICV_BORDER_COLOR	equ	VICV_BASE
F01:0032       VICV_BACKGROUND_COLOR	equ	VICV_BASE+$02
F01:0033       VICV_TXT		equ	VICV_BASE+$04
F01:0034       VICV_COL		equ	VICV_BASE+$08
F01:0035       VICV_BORDER_SIZE	equ	VICV_BASE+$0C
F01:0036       VICV_ISR		equ	VICV_BASE+$0E
F01:0037       VICV_BUFFERSWAP		equ	VICV_BASE+$10
F01:0038       
F01:0039       ; blitter
F01:0040       BLITTER_BASE		equ	$FE0700
F01:0041       BLITTER_CONTROL		equ	BLITTER_BASE
F01:0042       BLITTER_DATA_16_BIT	equ	BLITTER_BASE+$04
F01:0043       BLITTER_DATA_32_BIT	equ	BLITTER_BASE+$02
F01:0044       
F01:0045       C64_BLACK	equ	$F000
F01:0046       C64_WHITE	equ	$FFFF
F01:0047       C64_RED		equ	$F733
F01:0048       C64_CYAN	equ	$F8CC
F01:0049       C64_PURPLE	equ	$F849
F01:0050       C64_GREEN	equ	$F6A5
F01:0051       C64_BLUE	equ	$F339
F01:0052       C64_YELLOW	equ	$FEE8
F01:0053       C64_ORANGE	equ	$F853
F01:0054       C64_BROWN	equ	$F531
F01:0055       C64_LIGHTRED	equ	$FB77
F01:0056       C64_DARKGREY	equ	$F444
F01:0057       C64_GREY	equ	$F777
F01:0058       C64_LIGHTGREEN	equ	$FBFA
F01:0059       C64_LIGHTBLUE	equ	$F67D
F01:0060       C64_LIGHTGREY	equ	$FAAA
F01:0061       
F01:0062       ; SIDS
F01:0063       SOUND_BASE	equ	$FE0500			; base register
F01:0064       SID0_BASE	equ	SOUND_BASE
F01:0065       SID1_BASE	equ	SOUND_BASE+$20
F01:0066       SID2_BASE	equ	SOUND_BASE+$40
F01:0067       ; sound index
F01:0068       SID0_LEFT	equ	$80
F01:0069       SID0_RGHT	equ	$81
F01:0070       SID1_LEFT	equ	$82
F01:0071       SID1_RGHT	equ	$83
F01:0072       
F01:0073       N_C0_	equ	00*2
F01:0074       N_C0S	equ	01*2
F01:0075       N_D0_	equ	02*2
F01:0076       N_D0S	equ	03*2
F01:0077       N_E0_	equ	04*2
F01:0078       N_F0_	equ	05*2
F01:0079       N_F0S	equ	06*2
F01:0080       N_G0_	equ	07*2
F01:0081       N_G0S	equ	08*2
F01:0082       N_A0_	equ	09*2
F01:0083       N_A0S	equ	10*2
F01:0084       N_B0_	equ	11*2
F01:0085       
F01:0086       N_C1_	equ	12*2
F01:0087       N_C1S	equ	13*2
F01:0088       N_D1_	equ	14*2
F01:0089       N_D1S	equ	15*2
F01:0090       N_E1_	equ	16*2
F01:0091       N_F1_	equ	17*2
F01:0092       N_F1S	equ	18*2
F01:0093       N_G1_	equ	19*2
F01:0094       N_G1S	equ	20*2
F01:0095       N_A1_	equ	21*2
F01:0096       N_A1S	equ	22*2
F01:0097       N_B1_	equ	23*2
F01:0098       
F01:0099       N_C2_	equ	24*2
F01:0100       N_C2S	equ	25*2
F01:0101       N_D2_	equ	26*2
F01:0102       N_D2S	equ	27*2
F01:0103       N_E2_	equ	28*2
F01:0104       N_F2_	equ	29*2
F01:0105       N_F2S	equ	30*2
F01:0106       N_G2_	equ	31*2
F01:0107       N_G2S	equ	32*2
F01:0108       N_A2_	equ	33*2
F01:0109       N_A2S	equ	34*2
F01:0110       N_B2_	equ	35*2
F01:0111       
F01:0112       N_C3_	equ	36*2
F01:0113       N_C3S	equ	37*2
F01:0114       N_D3_	equ	38*2
F01:0115       N_D3S	equ	39*2
F01:0116       N_E3_	equ	40*2
F01:0117       N_F3_	equ	41*2
F01:0118       N_F3S	equ	42*2
F01:0119       N_G3_	equ	43*2
F01:0120       N_G3S	equ	44*2
F01:0121       N_A3_	equ	45*2
F01:0122       N_A3S	equ	46*2
F01:0123       N_B3_	equ	47*2
F01:0124       
F01:0125       N_C4_	equ	48*2
F01:0126       N_C4S	equ	49*2
F01:0127       N_D4_	equ	50*2
F01:0128       N_D4S	equ	51*2
F01:0129       N_E4_	equ	52*2
F01:0130       N_F4_	equ	53*2
F01:0131       N_F4S	equ	54*2
F01:0132       N_G4_	equ	55*2
F01:0133       N_G4S	equ	56*2
F01:0134       N_A4_	equ	57*2
F01:0135       N_A4S	equ	58*2
F01:0136       N_B4_	equ	59*2
F01:0137       
F01:0138       N_C5_	equ	60*2
F01:0139       N_C5S	equ	61*2
F01:0140       N_D5_	equ	62*2
F01:0141       N_D5S	equ	63*2
F01:0142       N_E5_	equ	64*2
F01:0143       N_F5_	equ	65*2
F01:0144       N_F5S	equ	66*2
F01:0145       N_G5_	equ	67*2
F01:0146       N_G5S	equ	68*2
F01:0147       N_A5_	equ	69*2
F01:0148       N_A5S	equ	70*2
F01:0149       N_B5_	equ	71*2
F01:0150       
F01:0151       N_C6_	equ	72*2
F01:0152       N_C6S	equ	73*2
F01:0153       N_D6_	equ	74*2
F01:0154       N_D6S	equ	75*2
F01:0155       N_E6_	equ	76*2
F01:0156       N_F6_	equ	77*2
F01:0157       N_F6S	equ	78*2
F01:0158       N_G6_	equ	79*2
F01:0159       N_G6S	equ	80*2
F01:0160       N_A6_	equ	81*2
F01:0161       N_A6S	equ	82*2
F01:0162       N_B6_	equ	83*2
F01:0163       
F01:0164       N_C7_	equ	84*2
F01:0165       N_C7S	equ	85*2
F01:0166       N_D7_	equ	86*2
F01:0167       N_D7S	equ	87*2
F01:0168       N_E7_	equ	88*2
F01:0169       N_F7_	equ	89*2
F01:0170       N_F7S	equ	90*2
F01:0171       N_G7_	equ	91*2
F01:0172       N_G7S	equ	92*2
F01:0173       N_A7_	equ	93*2
F01:0174       N_A7S	equ	94*2
F01:0175       
F01:0176       CURR_TEXT_COLOR	equ	$008000	; byte
F01:0177       CURSOR_POS	equ	$008002	; word
F01:0178       
F01:0179       TIMER0_VECTOR	equ	$008004	; long
F01:0180       TIMER1_VECTOR	equ	$008008	; long
F01:0181       TIMER2_VECTOR	equ	$00800C	; long
F01:0182       TIMER3_VECTOR	equ	$008010	; long
F01:0183       
F00:0005       
F00:0006       	ORG	KERNEL_LOC
F00:0007       
F00:0008       	DC.L	$00D00000		; vector 0 - supervisor stackpointer
               S01:00FF0000:  00 D0 00 00
F00:0009       	DC.L	kernel_main		; vector 1 - reset vector
               S01:00FF0004:  00 FF 00 08
F00:0010       
F00:0011       
F00:0012       ; start of main kernel code
F00:0013       
F00:0014       kernel_main
F00:0015       
F00:0016       	; populate vector table
F00:0017       
F00:0018       	LEA	exception_handler,A0
               S01:00FF0008:  41 FA 02 4E
F00:0019       	MOVE.L	A0,VEC_04_ILLEGAL_INSTRUCTION
               S01:00FF000C:  21 C8 00 10
F00:0020       	MOVE.L	A0,VEC_10_UNIMPL_INSTRUCTION
               S01:00FF0010:  21 C8 00 28
F00:0021       	MOVE.L	A0,VEC_11_UNIMPL_INSTRUCTION
               S01:00FF0014:  21 C8 00 2C
F00:0022       
F00:0023       	LEA	interrupt_2_autovector,A0
               S01:00FF0018:  41 FA 02 4A
F00:0024       	MOVE.L	A0,VEC_26_LEVEL2_IRQ_AUTOVECT
               S01:00FF001C:  21 C8 00 68
F00:0025       
F00:0026       	LEA	interrupt_4_autovector,A0
               S01:00FF0020:  41 FA 02 76
F00:0027       	MOVE.L	A0,VEC_28_LEVEL4_IRQ_AUTOVECT
               S01:00FF0024:  21 C8 00 70
F00:0028       
F00:0029       	LEA	interrupt_5_autovector,A0
               S01:00FF0028:  41 FA 02 DC
F00:0030       	MOVE.L	A0,VEC_29_LEVEL5_IRQ_AUTOVECT
               S01:00FF002C:  21 C8 00 74
F00:0031       
F00:0032       	LEA	interrupt_6_autovector,A0
               S01:00FF0030:  41 FA 02 DA
F00:0033       	MOVE.L	A0,VEC_30_LEVEL6_IRQ_AUTOVECT
               S01:00FF0034:  21 C8 00 78
F00:0034       
F00:0035       	LEA	interrupt_7_autovector,A0
               S01:00FF0038:  41 FA 02 D4
F00:0036       	MOVE.L	A0,VEC_31_LEVEL7_IRQ_AUTOVECT
               S01:00FF003C:  21 C8 00 7C
F00:0037       
F00:0038       	LEA	timer0_handler,A0
               S01:00FF0040:  41 FA 02 CE
F00:0039       	MOVE.L	A0,TIMER0_VECTOR
               S01:00FF0044:  23 C8 00 00 80 04
F00:0040       
F00:0041       	LEA	timer1_handler,A0
               S01:00FF004A:  41 FA 02 D6
F00:0042       	MOVE.L	A0,TIMER1_VECTOR
               S01:00FF004E:  23 C8 00 00 80 08
F00:0043       
F00:0044       	LEA	timer2_handler,A0
               S01:00FF0054:  41 FA 02 E2
F00:0045       	MOVE.L	A0,TIMER2_VECTOR
               S01:00FF0058:  23 C8 00 00 80 0C
F00:0046       
F00:0047       	LEA	timer3_handler,A0
               S01:00FF005E:  41 FA 02 DA
F00:0048       	MOVE.L	A0,TIMER3_VECTOR
               S01:00FF0062:  23 C8 00 00 80 10
F00:0049       
F00:0050       
F00:0051       	; set up timer0 interrupts
F00:0052       
F00:0053       	MOVE.W	#$3C,TIMER_BASE+2	; load value 60 ($3c = 60bpm = 1Hz)
               S01:00FF0068:  33 FC 00 3C 00 FE 06 02
F00:0054       	ORI.B	#%00000001,TIMER_BASE+1	; turn on interrupt generation by clock0
               S01:00FF0070:  00 39 00 01 00 FE 06 01
F00:0055       
F00:0056       
F00:0057       	; set up timer1 interrupts
F00:0058       
F00:0059       	MOVE.W	#$708,TIMER_BASE+2		; load value
               S01:00FF0078:  33 FC 07 08 00 FE 06 02
F00:0060       	ORI.B	#%00000010,TIMER_BASE+1	; turn on interrupt generation by clock1
               S01:00FF0080:  00 39 00 02 00 FE 06 01
F00:0061       
F00:0062       
F00:0063       	; set up timer3 interrupts at 50.125Hz for music / sid tunes
F00:0064       
F00:0065       	MOVE.W	#$BC0,TIMER_BASE+2		; 3008bpm (=50.125Hz)
               S01:00FF0088:  33 FC 0B C0 00 FE 06 02
F00:0066       	ORI.B	#%00001000,TIMER_BASE+1	; turn on interrupt generation by clock3
               S01:00FF0090:  00 39 00 08 00 FE 06 01
F00:0067       
F00:0068       
F00:0069       	; set ipl to level 1 (all interrupts of >=2 level will be acknowledged)
F00:0070       
F00:0071       	MOVE.W	SR,D0
               S01:00FF0098:  40 C0
F00:0072       	ANDI.W	#%1111100011111111,D0
               S01:00FF009A:  02 40 F8 FF
F00:0073       	ORI.W	#%0000000100000000,D0
               S01:00FF009E:  00 40 01 00
F00:0074       	MOVE.W	D0,SR
               S01:00FF00A2:  46 C0
F00:0075       
F00:0076       
F00:0077       	; max volume for both sids
F00:0078       
F00:0079       	LEA	SID0_BASE,A0
               S01:00FF00A4:  41 F9 00 FE 05 00
F00:0080       	MOVE.B	#$0F,$18(A0)
               S01:00FF00AA:  11 7C 00 0F 00 18
F00:0081       	LEA	SID1_BASE,A0
               S01:00FF00B0:  41 F9 00 FE 05 20
F00:0082       	MOVE.B	#$0F,$18(A0)
               S01:00FF00B6:  11 7C 00 0F 00 18
F00:0083       
F00:0084       
F00:0085       	; copy char rom to ram (go from 2k to 32k)
F00:0086       
F00:0087       	BSR	copy_charrom_to_charram
               S01:00FF00BC:  61 00 02 98
F00:0088       
F00:0089       
F00:0090       	; copy kernel into ram to make it visible for VICV
F00:0091       
F00:0092       	MOVEA.L	#KERNEL_LOC,A0
               S01:00FF00C0:  20 7C 00 FF 00 00
F00:0093       	MOVEA.L	A0,A1
               S01:00FF00C6:  22 48
F00:0094       	MOVE.L	#$10000,D0
               S01:00FF00C8:  70 01 48 40
F00:0095       	BSR	memcopy
               S01:00FF00CC:  61 00 02 74
F00:0096       
F00:0097       
F00:0098       	; set screen colors
F00:0099       
F00:0100       	MOVE.W	#C64_BLACK,VICV_BORDER_COLOR
               S01:00FF00D0:  33 FC F0 00 00 FE 04 00
F00:0101       	MOVE.W	#C64_BLUE,VICV_BACKGROUND_COLOR
               S01:00FF00D8:  33 FC F3 39 00 FE 04 02
F00:0102       
F00:0103       
F00:0104       	; set border size
F00:0105       
F00:0106       	MOVE.B	#$0,VICV_BORDER_SIZE
               S01:00FF00E0:  13 FC 00 00 00 FE 04 0C
F00:0107       
F00:0108       
F00:0109       	; set text color / NEEDS WORK!
F00:0110       
F00:0111       	MOVE.B	#$0C,CURR_TEXT_COLOR	; c64 grey
               S01:00FF00E8:  13 FC 00 0C 00 00 80 00
F00:0112       
F00:0113       
F00:0114       	; set txt pointer
F00:0115       	MOVE.L	#$00F00000,VICV_TXT
               S01:00FF00F0:  23 FC 00 F0 00 00 00 FE 04 04
F00:0116       	MOVE.L	#$00F00800,VICV_COL
               S01:00FF00FA:  23 FC 00 F0 08 00 00 FE 04 08
F00:0117       
F00:0118       
F00:0119       	; reset cursor position
F00:0120       	MOVE.W	#$0,CURSOR_POS
               S01:00FF0104:  33 FC 00 00 00 00 80 02
F00:0121       
F00:0122       
F00:0123       	; clear screen and print welcome
F00:0124       
F00:0125       	BSR	clear_screen
               S01:00FF010C:  61 00 00 96
F00:0126       	LEA	welcome,A0
               S01:00FF0110:  41 FA 06 96
F00:0127       	BSR	put_string
               S01:00FF0114:  61 00 01 32
F00:0128       
F00:0129       
F00:0130       	; play a welcome sound on SID0
F00:0131       
F00:0132       	LEA	SID0_BASE,A0
               S01:00FF0118:  41 F9 00 FE 05 00
F00:0133       	LEA	notes,A1
               S01:00FF011E:  43 FA 07 4A
F00:0134       	MOVE.W	(N_D3_,A1),(A0)		; set frequency of voice 1
               S01:00FF0122:  30 A9 00 4C
F00:0135       	MOVE.B	#%00001001,($5,A0)	; attack and decay of voice 1
               S01:00FF0126:  11 7C 00 09 00 05
F00:0136       	MOVE.W	#$F0F,($02,A0)		; pulse width of voice 1
               S01:00FF012C:  31 7C 0F 0F 00 02
F00:0137       	MOVE.B	#$FF,(SID0_LEFT,A0)	; left channel mix
               S01:00FF0132:  11 7C 00 FF 00 80
F00:0138       	MOVE.B	#$10,(SID0_RGHT,A0)	; right channel mix
               S01:00FF0138:  11 7C 00 10 00 81
F00:0139       	MOVE.B	#%01000001,($4,A0)	; pulse (bit 6) and open gate (bit 0)
               S01:00FF013E:  11 7C 00 41 00 04
F00:0140       
F00:0141       
F00:0142       	; play a welcome sound on SID1
F00:0143       
F00:0144       	LEA	SID1_BASE,A0
               S01:00FF0144:  41 F9 00 FE 05 20
F00:0145       	LEA	notes,A1
               S01:00FF014A:  43 FA 07 1E
F00:0146       	MOVE.W	(N_A3_,A1),(A0)		; set frequency of voice 1
               S01:00FF014E:  30 A9 00 5A
F00:0147       	MOVE.B	#%00001001,($5,A0)	; attack and decay of voice 1
               S01:00FF0152:  11 7C 00 09 00 05
F00:0148       	MOVE.W	#$F0F,($2,A0)		; pulse width of voice 1
               S01:00FF0158:  31 7C 0F 0F 00 02
F00:0149       	MOVE.B	#$10,(SID1_LEFT,A0)	; left channel mix
               S01:00FF015E:  11 7C 00 10 00 82
F00:0150       	MOVE.B	#$FF,(SID1_RGHT,A0)	; right channel mix
               S01:00FF0164:  11 7C 00 FF 00 83
F00:0151       	MOVE.B	#%01000001,($4,A0)	; pulse (bit 6) and open gate (bit 0)
               S01:00FF016A:  11 7C 00 41 00 04
F00:0152       
F00:0153       
F00:0154       mainloop
F00:0155       
F00:0156       	; put something in the usp
F00:0157       	LEA	$C00000,A0
               S01:00FF0170:  41 F9 00 C0 00 00
F00:0158       	MOVE	A0,USP
               S01:00FF0176:  4E 60
F00:0159       
F00:0160       	; copy keyboard state in to screen
F00:0161       .1	MOVEQ	#$0,D0
               S01:00FF0178:  70 00
F00:0162       	MOVEA.L	VICV_TXT,A0
               S01:00FF017A:  20 79 00 FE 04 04
F00:0163       	LEA	($400,A0),A0
               S01:00FF0180:  41 E8 04 00
F00:0164       	LEA	CIA_BASE,A1
               S01:00FF0184:  43 F9 00 FE 03 00
F00:0165       	LEA	($80,A1),A1
               S01:00FF018A:  43 E9 00 80
F00:0166       .2	MOVE.B	(A1,D0),(A0,D0)
               S01:00FF018E:  11 B1 00 00 00 00
F00:0167       	ADDQ	#$1,D0
               S01:00FF0194:  52 40
F00:0168       	CMP.B	#$49,D0
               S01:00FF0196:  B0 3C 00 49
F00:0169       	BNE	.2
               S01:00FF019A:  66 F2
F00:0170       
F00:0171       	ADDQ.B	#$1,$00F00080
               S01:00FF019C:  52 39 00 F0 00 80
F00:0172       	BRA.S	.1
               S01:00FF01A2:  60 D4
F00:0173       
F00:0174       
F00:0175       clear_screen
F00:0176       	MOVEM.L	D0-D1/A0-A2,-(SP)
               S01:00FF01A4:  48 E7 C0 E0
F00:0177       	MOVEA.L	(VICV_TXT),A0
               S01:00FF01A8:  20 79 00 FE 04 04
F00:0178       	MOVEA.L	(VICV_COL),A1
               S01:00FF01AE:  22 79 00 FE 04 08
F00:0179       	MOVEA.L	A0,A2
               S01:00FF01B4:  24 48
F00:0180       	LEA	($800,A2),A2
               S01:00FF01B6:  45 EA 08 00
F00:0181       	MOVE.L	#$20202020,D0
               S01:00FF01BA:  20 3C 20 20 20 20
F00:0182       	MOVEQ	#$00,D1
               S01:00FF01C0:  72 00
F00:0183       	MOVE.B	CURR_TEXT_COLOR,D1
               S01:00FF01C2:  12 39 00 00 80 00
F00:0184       	LSL.L	#$8,D1
               S01:00FF01C8:  E1 89
F00:0185       	MOVE.B	CURR_TEXT_COLOR,D1
               S01:00FF01CA:  12 39 00 00 80 00
F00:0186       	LSL.L	#$8,D1
               S01:00FF01D0:  E1 89
F00:0187       	MOVE.B	CURR_TEXT_COLOR,D1
               S01:00FF01D2:  12 39 00 00 80 00
F00:0188       	LSL.L	#$8,D1
               S01:00FF01D8:  E1 89
F00:0189       	MOVE.B	CURR_TEXT_COLOR,D1
               S01:00FF01DA:  12 39 00 00 80 00
F00:0190       .1	MOVE.L	D0,(A0)+
               S01:00FF01E0:  20 C0
F00:0191       	MOVE.L	D1,(A1)+
               S01:00FF01E2:  22 C1
F00:0192       	CMP.L	A0,A2
               S01:00FF01E4:  B5 C8
F00:0193       	BNE	.1
               S01:00FF01E6:  66 F8
F00:0194       	MOVEM.L	(SP)+,D0-D1/A0-A2
               S01:00FF01E8:  4C DF 07 03
F00:0195       	RTS
               S01:00FF01EC:  4E 75
F00:0196       
F00:0197       
F00:0198       ; put_char expects an ascii value in register D0
F00:0199       
F00:0200       put_char
F00:0201       
F00:0202       	MOVEM.L	D1-D2/A0-A2,-(SP)	; save registers
               S01:00FF01EE:  48 E7 60 E0
F00:0203       	MOVE.W	CURSOR_POS,D1		; load current cursor position into D1
               S01:00FF01F2:  32 39 00 00 80 02
F00:0204       	MOVE.B	CURR_TEXT_COLOR,D2	; load current text colour into D2
               S01:00FF01F8:  14 39 00 00 80 00
F00:0205       	MOVEA.L	VICV_TXT,A0		; load pointer to current text screen into A0
               S01:00FF01FE:  20 79 00 FE 04 04
F00:0206       	MOVEA.L	VICV_COL,A1		; load pointer to current color screen into A1
               S01:00FF0204:  22 79 00 FE 04 08
F00:0207       	LEA	ascii_to_screencode,A2	; A2 now points to ascii-screencode table
               S01:00FF020A:  45 FA 05 CE
F00:0208       	CMP.B	#ASCII_LF,D0		; do we have a line feed as the next ascii?
               S01:00FF020E:  B0 3C 00 0A
F00:0209       	BEQ	.1
               S01:00FF0212:  67 20
F00:0210       	MOVE.B	(A2,D0),D0		; change the ascii value to a screencode value
               S01:00FF0214:  10 32 00 00
F00:0211       	MOVE.B	D0,(A0,D1)
               S01:00FF0218:  11 80 10 00
F00:0212       	MOVE.B	D2,(A1,D1)
               S01:00FF021C:  13 82 10 00
F00:0213       	ADDQ	#$1,CURSOR_POS
               S01:00FF0220:  52 79 00 00 80 02
F00:0214       	ANDI.W	#$7FF,CURSOR_POS
               S01:00FF0226:  02 79 07 FF 00 00 80 02
F00:0215       	MOVEM.L	(SP)+,D1-D2/A0-A2	; restore registers
               S01:00FF022E:  4C DF 07 06
F00:0216       	RTS
               S01:00FF0232:  4E 75
F00:0217       .1	ADDI.W	#$40,D1			; add 64 positions to current cursor pos
               S01:00FF0234:  06 41 00 40
F00:0218       	ANDI.W	#%1111111111000000,D1	; move cursor pos to beginning of line
               S01:00FF0238:  02 41 FF C0
F00:0219       	MOVE.W	D1,CURSOR_POS		; store new value
               S01:00FF023C:  33 C1 00 00 80 02
F00:0220       	MOVEM.L	(SP)+,D1-D2/A0-A2	; restore registers
               S01:00FF0242:  4C DF 07 06
F00:0221       	RTS
               S01:00FF0246:  4E 75
F00:0222       
F00:0223       
F00:0224       
F00:0225       put_string
F00:0226       
F00:0227       	;
F00:0228       	; put_string expects a pointer to a string in a0
F00:0229       	;
F00:0230       
F00:0231       	MOVE.L	A0,-(SP)
               S01:00FF0248:  2F 08
F00:0232       .1	MOVE.B	(A0)+,D0	; move the first ascii value of string into D0
               S01:00FF024A:  10 18
F00:0233       	CMP.B	#ASCII_NULL,D0	; did we reach the end of the string?
               S01:00FF024C:  4A 00
F00:0234       	BEQ	.2		; yes, go to end of function
               S01:00FF024E:  67 04
F00:0235       	BSR	put_char	; no, print char
               S01:00FF0250:  61 9C
F00:0236       	BRA	.1
               S01:00FF0252:  60 F6
F00:0237       .2	MOVE.L	(SP)+,A0
               S01:00FF0254:  20 5F
F00:0238       	RTS
               S01:00FF0256:  4E 75
F00:0239       
F00:0240       
F00:0241       ; fake exception handler
F00:0242       
F00:0243       exception_handler
F00:0244       
F00:0245       	MOVE.L	D0,-(SP)
               S01:00FF0258:  2F 00
F00:0246       	MOVE.L	#$DEADBEEF,D0
               S01:00FF025A:  20 3C DE AD BE EF
F00:0247       	MOVE.L	(SP)+,D0
               S01:00FF0260:  20 1F
F00:0248       	RTE
               S01:00FF0262:  4E 73
F00:0249       
F00:0250       
F00:0251       ; level 2 interrupt autovector (vicv vblank)
F00:0252       
F00:0253       interrupt_2_autovector
F00:0254       
F00:0255       	MOVE.B	#%00000001,VICV_ISR			; acknowledge VBLANK interrupt
               S01:00FF0264:  13 FC 00 01 00 FE 04 0E
F00:0256       	MOVE.B	#%00000001,VICV_BUFFERSWAP		; switch front- and backbuffer
               S01:00FF026C:  13 FC 00 01 00 FE 04 10
F00:0257       	MOVE.W	#C64_BLUE,BLITTER_DATA_16_BIT		; load color blue in data register of blitter
               S01:00FF0274:  33 FC F3 39 00 FE 07 04
F00:0258       	MOVE.B	#%00000001,BLITTER_CONTROL		; clear the backbuffer
               S01:00FF027C:  13 FC 00 01 00 FE 07 00
F00:0259       	MOVE.L	#logo_blit_structure,BLITTER_DATA_32_BIT
               S01:00FF0284:  23 FC 00 FF 03 92 00 FE 07 02
F00:0260       	MOVE.B	#%00000010,BLITTER_CONTROL
               S01:00FF028E:  13 FC 00 02 00 FE 07 00
F00:0261       	RTE
               S01:00FF0296:  4E 73
F00:0262       
F00:0263       
F00:0264       ; level 4 interrupt autovector (timer)
F00:0265       
F00:0266       interrupt_4_autovector
F00:0267       
F00:0268       	MOVE.L	A0,-(SP)		; save a0
               S01:00FF0298:  2F 08
F00:0269       timer0_check
F00:0270       	BTST	#0,TIMER_BASE		; did timer 0 cause the interrupt?
               S01:00FF029A:  08 39 00 00 00 FE 06 00
F00:0271       	BEQ	timer1_check		; no, go to next timer
               S01:00FF02A2:  67 10
F00:0272       	MOVE.B	#%00000001,TIMER_BASE	; yes, acknowledge interrupt
               S01:00FF02A4:  13 FC 00 01 00 FE 06 00
F00:0273       	MOVEA.L	TIMER0_VECTOR,A0
               S01:00FF02AC:  20 79 00 00 80 04
F00:0274       	JMP	(A0)
               S01:00FF02B2:  4E D0
F00:0275       timer1_check
F00:0276       	BTST	#1,TIMER_BASE
               S01:00FF02B4:  08 39 00 01 00 FE 06 00
F00:0277       	BEQ	timer2_check
               S01:00FF02BC:  67 10
F00:0278       	MOVE.B	#%00000010,TIMER_BASE
               S01:00FF02BE:  13 FC 00 02 00 FE 06 00
F00:0279       	MOVEA.L	TIMER1_VECTOR,A0
               S01:00FF02C6:  20 79 00 00 80 08
F00:0280       	JMP	(A0)
               S01:00FF02CC:  4E D0
F00:0281       timer2_check
F00:0282       	BTST	#2,TIMER_BASE		; did timer 2 cause the interrupt?
               S01:00FF02CE:  08 39 00 02 00 FE 06 00
F00:0283       	BEQ	timer3_check		; no, go to next timer
               S01:00FF02D6:  67 10
F00:0284       	MOVE.B	#%00000100,TIMER_BASE	; yes, acknowledge interrupt
               S01:00FF02D8:  13 FC 00 04 00 FE 06 00
F00:0285       	MOVEA.L	TIMER2_VECTOR,A0
               S01:00FF02E0:  20 79 00 00 80 0C
F00:0286       	JMP	(A0)
               S01:00FF02E6:  4E D0
F00:0287       timer3_check
F00:0288       	BTST	#3,TIMER_BASE
               S01:00FF02E8:  08 39 00 03 00 FE 06 00
F00:0289       	BEQ	timer_finish		; no, go to timer finish
               S01:00FF02F0:  67 10
F00:0290       	MOVE.B	#%00001000,TIMER_BASE	; yes, acknowledge
               S01:00FF02F2:  13 FC 00 08 00 FE 06 00
F00:0291       	MOVEA.L	TIMER3_VECTOR,A0
               S01:00FF02FA:  20 79 00 00 80 10
F00:0292       	JMP	(A0)
               S01:00FF0300:  4E D0
F00:0293       timer_finish
F00:0294       	MOVE.L	(SP)+,A0		; restore a0
               S01:00FF0302:  20 5F
F00:0295       	RTE
               S01:00FF0304:  4E 73
F00:0296       
F00:0297       
F00:0298       ; level 5 interrupt autovector
F00:0299       
F00:0300       interrupt_5_autovector
F00:0301       
F00:0302       	MOVE.L	A0,-(SP)
               S01:00FF0306:  2F 08
F00:0303       	MOVE.L	(SP)+,A0
               S01:00FF0308:  20 5F
F00:0304       	RTE
               S01:00FF030A:  4E 73
F00:0305       
F00:0306       
F00:0307       ; level 6 interrupt autovector
F00:0308       
F00:0309       interrupt_6_autovector
F00:0310       
F00:0311       	RTE
               S01:00FF030C:  4E 73
F00:0312       
F00:0313       
F00:0314       ; level 7 interrupt autovector
F00:0315       
F00:0316       interrupt_7_autovector
F00:0317       
F00:0318       	RTE
               S01:00FF030E:  4E 73
F00:0319       
F00:0320       
F00:0321       timer0_handler
F00:0322       
F00:0323       	MOVE.L	A0,-(SP)
               S01:00FF0310:  2F 08
F00:0324       	MOVEA.L	VICV_COL,A0
               S01:00FF0312:  20 79 00 FE 04 08
F00:0325       	ADDQ.B	#$1,(A0)
               S01:00FF0318:  52 10
F00:0326       	ANDI.B	#%00001111,(A0)
               S01:00FF031A:  02 10 00 0F
F00:0327       	MOVEA.L	(SP)+,A0
               S01:00FF031E:  20 5F
F00:0328       	BRA	timer1_check
               S01:00FF0320:  60 92
F00:0329       
F00:0330       
F00:0331       timer1_handler
F00:0332       
F00:0333       	MOVE.L	A0,-(SP)
               S01:00FF0322:  2F 08
F00:0334       	MOVEA.L	VICV_COL,A0
               S01:00FF0324:  20 79 00 FE 04 08
F00:0335       	ADDQ.B	#$1,(1,A0)
               S01:00FF032A:  52 28 00 01
F00:0336       	ANDI.B	#%00001111,(1,A0)
               S01:00FF032E:  02 28 00 0F 00 01
F00:0337       	MOVEA.L	(SP)+,A0
               S01:00FF0334:  20 5F
F00:0338       	BRA	timer2_check
               S01:00FF0336:  60 96
F00:0339       
F00:0340       
F00:0341       timer2_handler
F00:0342       
F00:0343       	;
F00:0344       	BRA	timer3_check
               S01:00FF0338:  60 AE
F00:0345       
F00:0346       
F00:0347       timer3_handler
F00:0348       
F00:0349       	;
F00:0350       	ADDQ.B	#1,VICV_BORDER_SIZE
               S01:00FF033A:  52 39 00 FE 04 0C
F00:0351       	;
F00:0352       	BRA	timer_finish
               S01:00FF0340:  60 C0
F00:0353       
F00:0354       
F00:0355       memcopy
F00:0356       
F00:0357       	;
F00:0358       	;	bytewise memory copy - probably very slow...
F00:0359       	;
F00:0360       	;	Arguments
F00:0361       	;
F00:0362       	;	A0	source_start_address
F00:0363       	;	D0	no_of_bytes
F00:0364       	;	A1	destination_start_address
F00:0365       	;
F00:0366       
F00:0367       	MOVE.L	D1,-(SP)
               S01:00FF0342:  2F 01
F00:0368       	MOVEQ	#$0,D1
               S01:00FF0344:  72 00
F00:0369       .1	MOVE.B	(A0,D1.L),(A1,D1.L)
               S01:00FF0346:  13 B0 18 00 18 00
F00:0370       	ADDQ.L	#$1,D1
               S01:00FF034C:  52 81
F00:0371       	CMP.L	D1,D0
               S01:00FF034E:  B0 81
F00:0372       	BNE	.1
               S01:00FF0350:  66 F4
F00:0373       
F00:0374       	MOVE.L	(SP)+,D1
               S01:00FF0352:  22 1F
F00:0375       	RTS
               S01:00FF0354:  4E 75
F00:0376       
F00:0377       
F00:0378       copy_charrom_to_charram
F00:0379       
F00:0380       	;
F00:0381       	;	Register Usage
F00:0382       	;
F00:0383       	;	D0	current_byte, holds a byte from the original rom charset
F00:0384       	;	D1	i, counter from 7 to 0 (8 bits per byte have to be processed)
F00:0385       	;	A0	*char_ram, pointer
F00:0386       	;	A1	*char_rom, pointer
F00:0387       	;
F00:0388       	MOVEM.L	D0-D1/A0-A1,-(SP)
               S01:00FF0356:  48 E7 C0 C0
F00:0389       
F00:0390       	MOVEQ	#0,D0			;    current_byte = 0;
               S01:00FF035A:  70 00
F00:0391       	LEA	CHAR_RAM,A0		;    char_ram = CHAR_RAM;
               S01:00FF035C:  41 F9 00 E5 00 00
F00:0392       	LEA	CHAR_ROM,A1		;    char_rom = CHAR_ROM;
               S01:00FF0362:  43 F9 00 FD 00 00
F00:0393       
F00:0394       .1	CMPA.L	#CHAR_ROM+$800,A1	;    while(char_ram != CHAR_ROM+$800)
               S01:00FF0368:  B3 FC 00 FD 08 00
F00:0395       	BEQ	.5			;    {   //	branch to end of compound statement
               S01:00FF036E:  67 1C
F00:0396       					;        // load a byte from charset and incr pntr
F00:0397       	MOVE.B	(A1)+,D0		;        current_byte = char_rom++;
               S01:00FF0370:  10 19
F00:0398       	MOVEQ	#8,D1			;        i = 8;
               S01:00FF0372:  72 08
F00:0399       .2	BTST	#$7,D0
               S01:00FF0374:  08 00 00 07
F00:0400       	BEQ	.3			;    bit 7 not set
               S01:00FF0378:  67 06
F00:0401       	MOVE.W	#C64_GREY,(A0)+		;    bit 7 is set, so set color
               S01:00FF037A:  30 FC F7 77
F00:0402       	BRA	.4
               S01:00FF037E:  60 04
F00:0403       .3	MOVE.W	#$0000,(A0)+		;    bit 7 not set, make empty
               S01:00FF0380:  30 FC 00 00
F00:0404       .4	LSL.B	#$01,D0			;    move all the bits one place to the left
               S01:00FF0384:  E3 08
F00:0405       	SUBQ	#$01,D1			;    i = i - 1;
               S01:00FF0386:  53 41
F00:0406       	BEQ	.1			;    did i reach zero? goto .1
               S01:00FF0388:  67 DE
F00:0407       	BRA	.2
               S01:00FF038A:  60 E8
F00:0408       					;    }
F00:0409       .5	MOVEM.L	(SP)+,D0-D1/A0-A1
               S01:00FF038C:  4C DF 03 03
F00:0410       	RTS
               S01:00FF0390:  4E 75
F00:0411       
F00:0412       init_song
F00:0413       
F00:0414       play_song_frame
F00:0415       
F00:0416       
F00:0417       ; logo blit description
F00:0418       
F00:0419       logo_blit_structure
F00:0420       	align	5		; blit data must be 32 byte (2^5) aligned
F00:0421       	DC.B	%00000011	; flags 0 - multicolor and bitmap mode
               S01:00FF03A0:  03
F00:0422       	DC.B	%00000000	; flags 1 - empty
               S01:00FF03A1:  00
F00:0423       	DC.B	%00000011	; width 2^3 = 8 chars = 64 pixels
               S01:00FF03A2:  03
F00:0424       	DC.B	%00000000	; height 2^0 = 1 char =  8 pixels
               S01:00FF03A3:  00
F00:0425       	DC.W	$D020		; x_pos
               S01:00FF03A4:  D0 20
F00:0426       	DC.W	$D021		; y_pos
               S01:00FF03A6:  D0 21
F00:0427       
F00:0428       
F00:0429       ; logo blit bitmap data
F00:0430       
F00:0431       logo_bitmap
F00:0432       	align 1
F00:0433       	DC.W	$0000,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF03A8:  00 00
               S01:00FF03AA:  F4 44
               S01:00FF03AC:  F4 44
               S01:00FF03AE:  F4 44
               S01:00FF03B0:  F4 44
               S01:00FF03B2:  F4 44
               S01:00FF03B4:  F4 44
               S01:00FF03B6:  F4 44
F00:0434       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF03B8:  F4 44
               S01:00FF03BA:  F4 44
               S01:00FF03BC:  F4 44
               S01:00FF03BE:  F4 44
               S01:00FF03C0:  F4 44
               S01:00FF03C2:  F4 44
               S01:00FF03C4:  F4 44
               S01:00FF03C6:  F4 44
F00:0435       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF03C8:  F4 44
               S01:00FF03CA:  F4 44
               S01:00FF03CC:  F4 44
               S01:00FF03CE:  F4 44
               S01:00FF03D0:  F4 44
               S01:00FF03D2:  F4 44
               S01:00FF03D4:  F4 44
               S01:00FF03D6:  F4 44
F00:0436       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF03D8:  F4 44
               S01:00FF03DA:  F4 44
               S01:00FF03DC:  F4 44
               S01:00FF03DE:  F4 44
               S01:00FF03E0:  F4 44
               S01:00FF03E2:  F4 44
               S01:00FF03E4:  F4 44
               S01:00FF03E6:  F4 44
F00:0437       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF03E8:  F4 44
               S01:00FF03EA:  F4 44
               S01:00FF03EC:  F4 44
               S01:00FF03EE:  F4 44
               S01:00FF03F0:  F4 44
               S01:00FF03F2:  F4 44
               S01:00FF03F4:  F4 44
               S01:00FF03F6:  F4 44
F00:0438       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF03F8:  F4 44
               S01:00FF03FA:  F4 44
               S01:00FF03FC:  F4 44
               S01:00FF03FE:  F4 44
               S01:00FF0400:  F4 44
               S01:00FF0402:  F4 44
               S01:00FF0404:  F4 44
               S01:00FF0406:  F4 44
F00:0439       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF0408:  F4 44
               S01:00FF040A:  F4 44
               S01:00FF040C:  F4 44
               S01:00FF040E:  F4 44
               S01:00FF0410:  F4 44
               S01:00FF0412:  F4 44
               S01:00FF0414:  F4 44
               S01:00FF0416:  F4 44
F00:0440       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$0000
               S01:00FF0418:  F4 44
               S01:00FF041A:  F4 44
               S01:00FF041C:  F4 44
               S01:00FF041E:  F4 44
               S01:00FF0420:  F4 44
               S01:00FF0422:  F4 44
               S01:00FF0424:  F4 44
               S01:00FF0426:  00 00
F00:0441       
F00:0442       	DC.W	$F444,$F444,$F733,$F733,$F733,$F733,$F733,$F733
               S01:00FF0428:  F4 44
               S01:00FF042A:  F4 44
               S01:00FF042C:  F7 33
               S01:00FF042E:  F7 33
               S01:00FF0430:  F7 33
               S01:00FF0432:  F7 33
               S01:00FF0434:  F7 33
               S01:00FF0436:  F7 33
F00:0443       	DC.W	$F733,$F733,$F733,$F733,$F733,$F733,$F733,$F733
               S01:00FF0438:  F7 33
               S01:00FF043A:  F7 33
               S01:00FF043C:  F7 33
               S01:00FF043E:  F7 33
               S01:00FF0440:  F7 33
               S01:00FF0442:  F7 33
               S01:00FF0444:  F7 33
               S01:00FF0446:  F7 33
F00:0444       	DC.W	$F733,$F733,$F444,$FAAA,$FAAA,$FAAA,$FAAA,$F444
               S01:00FF0448:  F7 33
               S01:00FF044A:  F7 33
               S01:00FF044C:  F4 44
               S01:00FF044E:  FA AA
               S01:00FF0450:  FA AA
               S01:00FF0452:  FA AA
               S01:00FF0454:  FA AA
               S01:00FF0456:  F4 44
F00:0445       	DC.W	$F444,$FAAA,$FAAA,$FAAA,$F444,$F444,$F444,$F444
               S01:00FF0458:  F4 44
               S01:00FF045A:  FA AA
               S01:00FF045C:  FA AA
               S01:00FF045E:  FA AA
               S01:00FF0460:  F4 44
               S01:00FF0462:  F4 44
               S01:00FF0464:  F4 44
               S01:00FF0466:  F4 44
F00:0446       	DC.W	$FAAA,$FAAA,$F444,$F444,$F444,$F444,$FAAA,$FAAA
               S01:00FF0468:  FA AA
               S01:00FF046A:  FA AA
               S01:00FF046C:  F4 44
               S01:00FF046E:  F4 44
               S01:00FF0470:  F4 44
               S01:00FF0472:  F4 44
               S01:00FF0474:  FA AA
               S01:00FF0476:  FA AA
F00:0447       	DC.W	$FAAA,$F444,$FAAA,$FAAA,$FAAA,$F444,$F733,$F733
               S01:00FF0478:  FA AA
               S01:00FF047A:  F4 44
               S01:00FF047C:  FA AA
               S01:00FF047E:  FA AA
               S01:00FF0480:  FA AA
               S01:00FF0482:  F4 44
               S01:00FF0484:  F7 33
               S01:00FF0486:  F7 33
F00:0448       	DC.W	$F733,$F733,$F733,$F733,$F733,$F733,$F733,$F733
               S01:00FF0488:  F7 33
               S01:00FF048A:  F7 33
               S01:00FF048C:  F7 33
               S01:00FF048E:  F7 33
               S01:00FF0490:  F7 33
               S01:00FF0492:  F7 33
               S01:00FF0494:  F7 33
               S01:00FF0496:  F7 33
F00:0449       	DC.W	$F733,$F733,$F733,$F733,$F733,$F733,$F444,$F444
               S01:00FF0498:  F7 33
               S01:00FF049A:  F7 33
               S01:00FF049C:  F7 33
               S01:00FF049E:  F7 33
               S01:00FF04A0:  F7 33
               S01:00FF04A2:  F7 33
               S01:00FF04A4:  F4 44
               S01:00FF04A6:  F4 44
F00:0450       
F00:0451       	DC.W	$F444,$F853,$F853,$F853,$F853,$F853,$F853,$F853
               S01:00FF04A8:  F4 44
               S01:00FF04AA:  F8 53
               S01:00FF04AC:  F8 53
               S01:00FF04AE:  F8 53
               S01:00FF04B0:  F8 53
               S01:00FF04B2:  F8 53
               S01:00FF04B4:  F8 53
               S01:00FF04B6:  F8 53
F00:0452       	DC.W	$F853,$F853,$F853,$F853,$F853,$F853,$F853,$F853
               S01:00FF04B8:  F8 53
               S01:00FF04BA:  F8 53
               S01:00FF04BC:  F8 53
               S01:00FF04BE:  F8 53
               S01:00FF04C0:  F8 53
               S01:00FF04C2:  F8 53
               S01:00FF04C4:  F8 53
               S01:00FF04C6:  F8 53
F00:0453       	DC.W	$F853,$F853,$F444,$FAAA,$F444,$F444,$F444,$F444
               S01:00FF04C8:  F8 53
               S01:00FF04CA:  F8 53
               S01:00FF04CC:  F4 44
               S01:00FF04CE:  FA AA
               S01:00FF04D0:  F4 44
               S01:00FF04D2:  F4 44
               S01:00FF04D4:  F4 44
               S01:00FF04D6:  F4 44
F00:0454       	DC.W	$FAAA,$F444,$F444,$F444,$F444,$F444,$F444,$FAAA
               S01:00FF04D8:  FA AA
               S01:00FF04DA:  F4 44
               S01:00FF04DC:  F4 44
               S01:00FF04DE:  F4 44
               S01:00FF04E0:  F4 44
               S01:00FF04E2:  F4 44
               S01:00FF04E4:  F4 44
               S01:00FF04E6:  FA AA
F00:0455       	DC.W	$F444,$FAAA,$F444,$F444,$F444,$F444,$F444,$FAAA
               S01:00FF04E8:  F4 44
               S01:00FF04EA:  FA AA
               S01:00FF04EC:  F4 44
               S01:00FF04EE:  F4 44
               S01:00FF04F0:  F4 44
               S01:00FF04F2:  F4 44
               S01:00FF04F4:  F4 44
               S01:00FF04F6:  FA AA
F00:0456       	DC.W	$F444,$F444,$F444,$FAAA,$F444,$F444,$F853,$F853
               S01:00FF04F8:  F4 44
               S01:00FF04FA:  F4 44
               S01:00FF04FC:  F4 44
               S01:00FF04FE:  FA AA
               S01:00FF0500:  F4 44
               S01:00FF0502:  F4 44
               S01:00FF0504:  F8 53
               S01:00FF0506:  F8 53
F00:0457       	DC.W	$F853,$F853,$F853,$F853,$F853,$F853,$F853,$F853
               S01:00FF0508:  F8 53
               S01:00FF050A:  F8 53
               S01:00FF050C:  F8 53
               S01:00FF050E:  F8 53
               S01:00FF0510:  F8 53
               S01:00FF0512:  F8 53
               S01:00FF0514:  F8 53
               S01:00FF0516:  F8 53
F00:0458       	DC.W	$F853,$F853,$F853,$F853,$F853,$F853,$F853,$F444
               S01:00FF0518:  F8 53
               S01:00FF051A:  F8 53
               S01:00FF051C:  F8 53
               S01:00FF051E:  F8 53
               S01:00FF0520:  F8 53
               S01:00FF0522:  F8 53
               S01:00FF0524:  F8 53
               S01:00FF0526:  F4 44
F00:0459       
F00:0460       	DC.W	$F444,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8
               S01:00FF0528:  F4 44
               S01:00FF052A:  FE E8
               S01:00FF052C:  FE E8
               S01:00FF052E:  FE E8
               S01:00FF0530:  FE E8
               S01:00FF0532:  FE E8
               S01:00FF0534:  FE E8
               S01:00FF0536:  FE E8
F00:0461       	DC.W	$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8
               S01:00FF0538:  FE E8
               S01:00FF053A:  FE E8
               S01:00FF053C:  FE E8
               S01:00FF053E:  FE E8
               S01:00FF0540:  FE E8
               S01:00FF0542:  FE E8
               S01:00FF0544:  FE E8
               S01:00FF0546:  FE E8
F00:0462       	DC.W	$FEE8,$FEE8,$F444,$FAAA,$FAAA,$FAAA,$F444,$F444
               S01:00FF0548:  FE E8
               S01:00FF054A:  FE E8
               S01:00FF054C:  F4 44
               S01:00FF054E:  FA AA
               S01:00FF0550:  FA AA
               S01:00FF0552:  FA AA
               S01:00FF0554:  F4 44
               S01:00FF0556:  F4 44
F00:0463       	DC.W	$FAAA,$FAAA,$FAAA,$FAAA,$F444,$F444,$FAAA,$F444
               S01:00FF0558:  FA AA
               S01:00FF055A:  FA AA
               S01:00FF055C:  FA AA
               S01:00FF055E:  FA AA
               S01:00FF0560:  F4 44
               S01:00FF0562:  F4 44
               S01:00FF0564:  FA AA
               S01:00FF0566:  F4 44
F00:0464       	DC.W	$F444,$FAAA,$F444,$FAAA,$FAAA,$F444,$F444,$FAAA
               S01:00FF0568:  F4 44
               S01:00FF056A:  FA AA
               S01:00FF056C:  F4 44
               S01:00FF056E:  FA AA
               S01:00FF0570:  FA AA
               S01:00FF0572:  F4 44
               S01:00FF0574:  F4 44
               S01:00FF0576:  FA AA
F00:0465       	DC.W	$F444,$F444,$F444,$FAAA,$F444,$F444,$FEE8,$FEE8
               S01:00FF0578:  F4 44
               S01:00FF057A:  F4 44
               S01:00FF057C:  F4 44
               S01:00FF057E:  FA AA
               S01:00FF0580:  F4 44
               S01:00FF0582:  F4 44
               S01:00FF0584:  FE E8
               S01:00FF0586:  FE E8
F00:0466       	DC.W	$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8
               S01:00FF0588:  FE E8
               S01:00FF058A:  FE E8
               S01:00FF058C:  FE E8
               S01:00FF058E:  FE E8
               S01:00FF0590:  FE E8
               S01:00FF0592:  FE E8
               S01:00FF0594:  FE E8
               S01:00FF0596:  FE E8
F00:0467       	DC.W	$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$FEE8,$F444
               S01:00FF0598:  FE E8
               S01:00FF059A:  FE E8
               S01:00FF059C:  FE E8
               S01:00FF059E:  FE E8
               S01:00FF05A0:  FE E8
               S01:00FF05A2:  FE E8
               S01:00FF05A4:  FE E8
               S01:00FF05A6:  F4 44
F00:0468       
F00:0469       	DC.W	$F444,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA
               S01:00FF05A8:  F4 44
               S01:00FF05AA:  FB FA
               S01:00FF05AC:  FB FA
               S01:00FF05AE:  FB FA
               S01:00FF05B0:  FB FA
               S01:00FF05B2:  FB FA
               S01:00FF05B4:  FB FA
               S01:00FF05B6:  FB FA
F00:0470       	DC.W	$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA
               S01:00FF05B8:  FB FA
               S01:00FF05BA:  FB FA
               S01:00FF05BC:  FB FA
               S01:00FF05BE:  FB FA
               S01:00FF05C0:  FB FA
               S01:00FF05C2:  FB FA
               S01:00FF05C4:  FB FA
               S01:00FF05C6:  FB FA
F00:0471       	DC.W	$FBFA,$FBFA,$F444,$FAAA,$F444,$F444,$F444,$F444
               S01:00FF05C8:  FB FA
               S01:00FF05CA:  FB FA
               S01:00FF05CC:  F4 44
               S01:00FF05CE:  FA AA
               S01:00FF05D0:  F4 44
               S01:00FF05D2:  F4 44
               S01:00FF05D4:  F4 44
               S01:00FF05D6:  F4 44
F00:0472       	DC.W	$FAAA,$F444,$F444,$F444,$FAAA,$F444,$FAAA,$FAAA
               S01:00FF05D8:  FA AA
               S01:00FF05DA:  F4 44
               S01:00FF05DC:  F4 44
               S01:00FF05DE:  F4 44
               S01:00FF05E0:  FA AA
               S01:00FF05E2:  F4 44
               S01:00FF05E4:  FA AA
               S01:00FF05E6:  FA AA
F00:0473       	DC.W	$FAAA,$FAAA,$F444,$F444,$F444,$F444,$F444,$FAAA
               S01:00FF05E8:  FA AA
               S01:00FF05EA:  FA AA
               S01:00FF05EC:  F4 44
               S01:00FF05EE:  F4 44
               S01:00FF05F0:  F4 44
               S01:00FF05F2:  F4 44
               S01:00FF05F4:  F4 44
               S01:00FF05F6:  FA AA
F00:0474       	DC.W	$F444,$F444,$F444,$FAAA,$F444,$F444,$FBFA,$FBFA
               S01:00FF05F8:  F4 44
               S01:00FF05FA:  F4 44
               S01:00FF05FC:  F4 44
               S01:00FF05FE:  FA AA
               S01:00FF0600:  F4 44
               S01:00FF0602:  F4 44
               S01:00FF0604:  FB FA
               S01:00FF0606:  FB FA
F00:0475       	DC.W	$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA
               S01:00FF0608:  FB FA
               S01:00FF060A:  FB FA
               S01:00FF060C:  FB FA
               S01:00FF060E:  FB FA
               S01:00FF0610:  FB FA
               S01:00FF0612:  FB FA
               S01:00FF0614:  FB FA
               S01:00FF0616:  FB FA
F00:0476       	DC.W	$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$FBFA,$F444
               S01:00FF0618:  FB FA
               S01:00FF061A:  FB FA
               S01:00FF061C:  FB FA
               S01:00FF061E:  FB FA
               S01:00FF0620:  FB FA
               S01:00FF0622:  FB FA
               S01:00FF0624:  FB FA
               S01:00FF0626:  F4 44
F00:0477       
F00:0478       	DC.W	$F444,$F444,$F67D,$F67D,$F67D,$F67D,$F67D,$F67D
               S01:00FF0628:  F4 44
               S01:00FF062A:  F4 44
               S01:00FF062C:  F6 7D
               S01:00FF062E:  F6 7D
               S01:00FF0630:  F6 7D
               S01:00FF0632:  F6 7D
               S01:00FF0634:  F6 7D
               S01:00FF0636:  F6 7D
F00:0479       	DC.W	$F67D,$F67D,$F67D,$F67D,$F67D,$F67D,$F67D,$F67D
               S01:00FF0638:  F6 7D
               S01:00FF063A:  F6 7D
               S01:00FF063C:  F6 7D
               S01:00FF063E:  F6 7D
               S01:00FF0640:  F6 7D
               S01:00FF0642:  F6 7D
               S01:00FF0644:  F6 7D
               S01:00FF0646:  F6 7D
F00:0480       	DC.W	$F67D,$F67D,$F444,$FAAA,$FAAA,$FAAA,$FAAA,$F444
               S01:00FF0648:  F6 7D
               S01:00FF064A:  F6 7D
               S01:00FF064C:  F4 44
               S01:00FF064E:  FA AA
               S01:00FF0650:  FA AA
               S01:00FF0652:  FA AA
               S01:00FF0654:  FA AA
               S01:00FF0656:  F4 44
F00:0481       	DC.W	$F444,$FAAA,$FAAA,$FAAA,$F444,$F444,$F444,$F444
               S01:00FF0658:  F4 44
               S01:00FF065A:  FA AA
               S01:00FF065C:  FA AA
               S01:00FF065E:  FA AA
               S01:00FF0660:  F4 44
               S01:00FF0662:  F4 44
               S01:00FF0664:  F4 44
               S01:00FF0666:  F4 44
F00:0482       	DC.W	$F444,$FAAA,$F444,$F444,$F444,$F444,$FAAA,$FAAA
               S01:00FF0668:  F4 44
               S01:00FF066A:  FA AA
               S01:00FF066C:  F4 44
               S01:00FF066E:  F4 44
               S01:00FF0670:  F4 44
               S01:00FF0672:  F4 44
               S01:00FF0674:  FA AA
               S01:00FF0676:  FA AA
F00:0483       	DC.W	$FAAA,$F444,$FAAA,$FAAA,$FAAA,$F444,$F67D,$F67D
               S01:00FF0678:  FA AA
               S01:00FF067A:  F4 44
               S01:00FF067C:  FA AA
               S01:00FF067E:  FA AA
               S01:00FF0680:  FA AA
               S01:00FF0682:  F4 44
               S01:00FF0684:  F6 7D
               S01:00FF0686:  F6 7D
F00:0484       	DC.W	$F67D,$F67D,$F67D,$F67D,$F67D,$F67D,$F67D,$F67D
               S01:00FF0688:  F6 7D
               S01:00FF068A:  F6 7D
               S01:00FF068C:  F6 7D
               S01:00FF068E:  F6 7D
               S01:00FF0690:  F6 7D
               S01:00FF0692:  F6 7D
               S01:00FF0694:  F6 7D
               S01:00FF0696:  F6 7D
F00:0485       	DC.W	$F67D,$F67D,$F67D,$F67D,$F67D,$F67D,$F444,$F444
               S01:00FF0698:  F6 7D
               S01:00FF069A:  F6 7D
               S01:00FF069C:  F6 7D
               S01:00FF069E:  F6 7D
               S01:00FF06A0:  F6 7D
               S01:00FF06A2:  F6 7D
               S01:00FF06A4:  F4 44
               S01:00FF06A6:  F4 44
F00:0486       
F00:0487       	DC.W	$0000,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF06A8:  00 00
               S01:00FF06AA:  F4 44
               S01:00FF06AC:  F4 44
               S01:00FF06AE:  F4 44
               S01:00FF06B0:  F4 44
               S01:00FF06B2:  F4 44
               S01:00FF06B4:  F4 44
               S01:00FF06B6:  F4 44
F00:0488       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF06B8:  F4 44
               S01:00FF06BA:  F4 44
               S01:00FF06BC:  F4 44
               S01:00FF06BE:  F4 44
               S01:00FF06C0:  F4 44
               S01:00FF06C2:  F4 44
               S01:00FF06C4:  F4 44
               S01:00FF06C6:  F4 44
F00:0489       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF06C8:  F4 44
               S01:00FF06CA:  F4 44
               S01:00FF06CC:  F4 44
               S01:00FF06CE:  F4 44
               S01:00FF06D0:  F4 44
               S01:00FF06D2:  F4 44
               S01:00FF06D4:  F4 44
               S01:00FF06D6:  F4 44
F00:0490       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF06D8:  F4 44
               S01:00FF06DA:  F4 44
               S01:00FF06DC:  F4 44
               S01:00FF06DE:  F4 44
               S01:00FF06E0:  F4 44
               S01:00FF06E2:  F4 44
               S01:00FF06E4:  F4 44
               S01:00FF06E6:  F4 44
F00:0491       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF06E8:  F4 44
               S01:00FF06EA:  F4 44
               S01:00FF06EC:  F4 44
               S01:00FF06EE:  F4 44
               S01:00FF06F0:  F4 44
               S01:00FF06F2:  F4 44
               S01:00FF06F4:  F4 44
               S01:00FF06F6:  F4 44
F00:0492       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF06F8:  F4 44
               S01:00FF06FA:  F4 44
               S01:00FF06FC:  F4 44
               S01:00FF06FE:  F4 44
               S01:00FF0700:  F4 44
               S01:00FF0702:  F4 44
               S01:00FF0704:  F4 44
               S01:00FF0706:  F4 44
F00:0493       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$F444
               S01:00FF0708:  F4 44
               S01:00FF070A:  F4 44
               S01:00FF070C:  F4 44
               S01:00FF070E:  F4 44
               S01:00FF0710:  F4 44
               S01:00FF0712:  F4 44
               S01:00FF0714:  F4 44
               S01:00FF0716:  F4 44
F00:0494       	DC.W	$F444,$F444,$F444,$F444,$F444,$F444,$F444,$0000
               S01:00FF0718:  F4 44
               S01:00FF071A:  F4 44
               S01:00FF071C:  F4 44
               S01:00FF071E:  F4 44
               S01:00FF0720:  F4 44
               S01:00FF0722:  F4 44
               S01:00FF0724:  F4 44
               S01:00FF0726:  00 00
F00:0495       
F00:0496       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0728:  00 00
               S01:00FF072A:  00 00
               S01:00FF072C:  00 00
               S01:00FF072E:  00 00
               S01:00FF0730:  00 00
               S01:00FF0732:  00 00
               S01:00FF0734:  00 00
               S01:00FF0736:  00 00
F00:0497       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0738:  00 00
               S01:00FF073A:  00 00
               S01:00FF073C:  00 00
               S01:00FF073E:  00 00
               S01:00FF0740:  00 00
               S01:00FF0742:  00 00
               S01:00FF0744:  00 00
               S01:00FF0746:  00 00
F00:0498       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0748:  00 00
               S01:00FF074A:  00 00
               S01:00FF074C:  00 00
               S01:00FF074E:  00 00
               S01:00FF0750:  00 00
               S01:00FF0752:  00 00
               S01:00FF0754:  00 00
               S01:00FF0756:  00 00
F00:0499       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0758:  00 00
               S01:00FF075A:  00 00
               S01:00FF075C:  00 00
               S01:00FF075E:  00 00
               S01:00FF0760:  00 00
               S01:00FF0762:  00 00
               S01:00FF0764:  00 00
               S01:00FF0766:  00 00
F00:0500       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0768:  00 00
               S01:00FF076A:  00 00
               S01:00FF076C:  00 00
               S01:00FF076E:  00 00
               S01:00FF0770:  00 00
               S01:00FF0772:  00 00
               S01:00FF0774:  00 00
               S01:00FF0776:  00 00
F00:0501       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0778:  00 00
               S01:00FF077A:  00 00
               S01:00FF077C:  00 00
               S01:00FF077E:  00 00
               S01:00FF0780:  00 00
               S01:00FF0782:  00 00
               S01:00FF0784:  00 00
               S01:00FF0786:  00 00
F00:0502       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0788:  00 00
               S01:00FF078A:  00 00
               S01:00FF078C:  00 00
               S01:00FF078E:  00 00
               S01:00FF0790:  00 00
               S01:00FF0792:  00 00
               S01:00FF0794:  00 00
               S01:00FF0796:  00 00
F00:0503       	DC.W	$0000,$0000,$0000,$0000,$0000,$0000,$0000,$0000
               S01:00FF0798:  00 00
               S01:00FF079A:  00 00
               S01:00FF079C:  00 00
               S01:00FF079E:  00 00
               S01:00FF07A0:  00 00
               S01:00FF07A2:  00 00
               S01:00FF07A4:  00 00
               S01:00FF07A6:  00 00
F00:0504       
F00:0505       ; string data
F00:0506       
F00:0507       welcome
F00:0508       	DC.B	"E64-II (C)2019-2020 kernel version 0.1.20200501",ASCII_LF,ASCII_NULL
               S01:00FF07A8:  45 36 34 2D 49 49 20 28 43 29 32 30 31 39 2D 32
               S01:00FF07B8:  30 32 30 20 6B 65 72 6E 65 6C 20 76 65 72 73 69
               S01:00FF07C8:  0A
               S01:00FF07C9:  00
F00:0509       
F00:0510       	ALIGN	1
F00:0511       
F00:0512       	INCLUDE	"kernel_tables.asm"
F02:0001       ; rom tables
F02:0002       
F02:0003       ascii_to_screencode
F02:0004       	dc.b	$80		; 0x00 - NUL	non printable character
               S01:00FF07DA:  80
F02:0005       	dc.b	$80		; 0x01 - SOH	non printable character
               S01:00FF07DB:  80
F02:0006       	dc.b	$80		; 0x02 - STX	non printable character
               S01:00FF07DC:  80
F02:0007       	dc.b	$80		; 0x03 - ETX	non printable character
               S01:00FF07DD:  80
F02:0008       	dc.b	$80		; 0x04 - EOT	non printable character
               S01:00FF07DE:  80
F02:0009       	dc.b	$80		; 0x05 - ENQ	non printable character
               S01:00FF07DF:  80
F02:0010       	dc.b	$80		; 0x06 - ACK	non printable character
               S01:00FF07E0:  80
F02:0011       	dc.b	$80		; 0x07 - BEL	non printable character
               S01:00FF07E1:  80
F02:0012       	dc.b	$80		; 0x08 - BS	non printable character
               S01:00FF07E2:  80
F02:0013       	dc.b	$80		; 0x09 - TAB	non printable character
               S01:00FF07E3:  80
F02:0014       	dc.b	$80		; 0x0A - LF	non printable character
               S01:00FF07E4:  80
F02:0015       	dc.b	$80		; 0x0B - VT	non printable character
               S01:00FF07E5:  80
F02:0016       	dc.b	$80		; 0x0C - FF	non printable character
               S01:00FF07E6:  80
F02:0017       	dc.b	$80		; 0x0D - CR	non printable character
               S01:00FF07E7:  80
F02:0018       	dc.b	$80		; 0x0E - SO	non printable character
               S01:00FF07E8:  80
F02:0019       	dc.b	$80		; 0x0F - SI	non printable character
               S01:00FF07E9:  80
F02:0020       	dc.b	$80		; 0x10 - DLE	non printable character
               S01:00FF07EA:  80
F02:0021       	dc.b	$80		; 0x11 - DC1	non printable character
               S01:00FF07EB:  80
F02:0022       	dc.b	$80		; 0x12 - DC2	non printable character
               S01:00FF07EC:  80
F02:0023       	dc.b	$80		; 0x13 - DC3	non printable character
               S01:00FF07ED:  80
F02:0024       	dc.b	$80		; 0x14 - DC4	non printable character
               S01:00FF07EE:  80
F02:0025       	dc.b	$80		; 0x15 - NAC	non printable character
               S01:00FF07EF:  80
F02:0026       	dc.b	$80		; 0x16 - SYN	non printable character
               S01:00FF07F0:  80
F02:0027       	dc.b	$80		; 0x17 - ETB	non printable character
               S01:00FF07F1:  80
F02:0028       	dc.b	$80		; 0x18 - CAN	non printable character
               S01:00FF07F2:  80
F02:0029       	dc.b	$80		; 0x19 - EM	non printable character
               S01:00FF07F3:  80
F02:0030       	dc.b	$80		; 0x1A - SUB	non printable character
               S01:00FF07F4:  80
F02:0031       	dc.b	$80		; 0x1B - ESC	non printable character
               S01:00FF07F5:  80
F02:0032       	dc.b	$80		; 0x1C - FS	non printable character
               S01:00FF07F6:  80
F02:0033       	dc.b	$80		; 0x1D - GS	non printable character
               S01:00FF07F7:  80
F02:0034       	dc.b	$80		; 0x1E - RS	non printable character
               S01:00FF07F8:  80
F02:0035       	dc.b	$80		; 0x1F - US	non printable character
               S01:00FF07F9:  80
F02:0036       	dc.b	$20		; 0x20 - (space)
               S01:00FF07FA:  20
F02:0037       	dc.b	$21		; 0x21 - !
               S01:00FF07FB:  21
F02:0038       	dc.b	$22		; 0x22 - "
               S01:00FF07FC:  22
F02:0039       	dc.b	$23		; 0x23 - #
               S01:00FF07FD:  23
F02:0040       	dc.b	$24		; 0x24 - $
               S01:00FF07FE:  24
F02:0041       	dc.b	$25		; 0x25 - %
               S01:00FF07FF:  25
F02:0042       	dc.b	$26		; 0x26 - &
               S01:00FF0800:  26
F02:0043       	dc.b	$27		; 0x27 - '
               S01:00FF0801:  27
F02:0044       	dc.b	$28		; 0x28 - (
               S01:00FF0802:  28
F02:0045       	dc.b	$29		; 0x29 - )
               S01:00FF0803:  29
F02:0046       	dc.b	$2A		; 0x2A - *
               S01:00FF0804:  2A
F02:0047       	dc.b	$2B		; 0x2B - +
               S01:00FF0805:  2B
F02:0048       	dc.b	$2C		; 0x2C - ,
               S01:00FF0806:  2C
F02:0049       	dc.b	$2D		; 0x2D - -
               S01:00FF0807:  2D
F02:0050       	dc.b	$2E		; 0x2E - .
               S01:00FF0808:  2E
F02:0051       	dc.b	$2F		; 0x2F - /
               S01:00FF0809:  2F
F02:0052       	dc.b	$30		; 0x30 - 0
               S01:00FF080A:  30
F02:0053       	dc.b	$31		; 0x31 - 1
               S01:00FF080B:  31
F02:0054       	dc.b	$32		; 0x32 - 2
               S01:00FF080C:  32
F02:0055       	dc.b	$33		; 0x33 - 3
               S01:00FF080D:  33
F02:0056       	dc.b	$34		; 0x34 - 4
               S01:00FF080E:  34
F02:0057       	dc.b	$35		; 0x35 - 5
               S01:00FF080F:  35
F02:0058       	dc.b	$36		; 0x36 - 6
               S01:00FF0810:  36
F02:0059       	dc.b	$37		; 0x37 - 7
               S01:00FF0811:  37
F02:0060       	dc.b	$38		; 0x38 - 8
               S01:00FF0812:  38
F02:0061       	dc.b	$39		; 0x39 - 9
               S01:00FF0813:  39
F02:0062       	dc.b	$3A		; 0x3A - :
               S01:00FF0814:  3A
F02:0063       	dc.b	$3B		; 0x3B - ;
               S01:00FF0815:  3B
F02:0064       	dc.b	$3C		; 0x3C - <
               S01:00FF0816:  3C
F02:0065       	dc.b	$3D		; 0x3D - =
               S01:00FF0817:  3D
F02:0066       	dc.b	$3E		; 0x3E - >
               S01:00FF0818:  3E
F02:0067       	dc.b	$3F		; 0x3F - ?
               S01:00FF0819:  3F
F02:0068       	dc.b	$00		; 0x40 - @
               S01:00FF081A:  00
F02:0069       	dc.b	$41		; 0x41 - A
               S01:00FF081B:  41
F02:0070       	dc.b	$42		; 0x42 - B
               S01:00FF081C:  42
F02:0071       	dc.b	$43		; 0x43 - C
               S01:00FF081D:  43
F02:0072       	dc.b	$44		; 0x44 - D
               S01:00FF081E:  44
F02:0073       	dc.b	$45		; 0x45 - E
               S01:00FF081F:  45
F02:0074       	dc.b	$46		; 0x46 - F
               S01:00FF0820:  46
F02:0075       	dc.b	$47		; 0x47 - G
               S01:00FF0821:  47
F02:0076       	dc.b	$48		; 0x48 - H
               S01:00FF0822:  48
F02:0077       	dc.b	$49		; 0x49 - I
               S01:00FF0823:  49
F02:0078       	dc.b	$4A		; 0x4A - J
               S01:00FF0824:  4A
F02:0079       	dc.b	$4B		; 0x4B - K
               S01:00FF0825:  4B
F02:0080       	dc.b	$4C		; 0x4C - L
               S01:00FF0826:  4C
F02:0081       	dc.b	$4D		; 0x4D - M
               S01:00FF0827:  4D
F02:0082       	dc.b	$4E		; 0x4E - N
               S01:00FF0828:  4E
F02:0083       	dc.b	$4F		; 0x4F - O
               S01:00FF0829:  4F
F02:0084       	dc.b	$50		; 0x50 - P
               S01:00FF082A:  50
F02:0085       	dc.b	$51		; 0x51 - Q
               S01:00FF082B:  51
F02:0086       	dc.b	$52		; 0x52 - R
               S01:00FF082C:  52
F02:0087       	dc.b	$53		; 0x53 - S
               S01:00FF082D:  53
F02:0088       	dc.b	$54		; 0x54 - T
               S01:00FF082E:  54
F02:0089       	dc.b	$55		; 0x55 - U
               S01:00FF082F:  55
F02:0090       	dc.b	$56		; 0x56 - V
               S01:00FF0830:  56
F02:0091       	dc.b	$57		; 0x57 - W
               S01:00FF0831:  57
F02:0092       	dc.b	$58		; 0x58 - X
               S01:00FF0832:  58
F02:0093       	dc.b	$59		; 0x59 - Y
               S01:00FF0833:  59
F02:0094       	dc.b	$5A		; 0x5A - Z
               S01:00FF0834:  5A
F02:0095       	dc.b	$1B		; 0x5B - [
               S01:00FF0835:  1B
F02:0096       	dc.b	$5C		; 0x5C - \	patched
               S01:00FF0836:  5C
F02:0097       	dc.b	$1D		; 0x5D - ]
               S01:00FF0837:  1D
F02:0098       	dc.b	$5E		; 0x5E - ^	patched
               S01:00FF0838:  5E
F02:0099       	dc.b	$5F		; 0x5F - _	patched
               S01:00FF0839:  5F
F02:0100       	dc.b	$63		; 0x60 - `	patched
               S01:00FF083A:  63
F02:0101       	dc.b	$01		; 0x61 - a
               S01:00FF083B:  01
F02:0102       	dc.b	$02		; 0x62 - b
               S01:00FF083C:  02
F02:0103       	dc.b	$03		; 0x63 - c
               S01:00FF083D:  03
F02:0104       	dc.b	$04		; 0x64 - d
               S01:00FF083E:  04
F02:0105       	dc.b	$05		; 0x65 - e
               S01:00FF083F:  05
F02:0106       	dc.b	$06		; 0x66 - f
               S01:00FF0840:  06
F02:0107       	dc.b	$07		; 0x67 - g
               S01:00FF0841:  07
F02:0108       	dc.b	$08		; 0x68 - h
               S01:00FF0842:  08
F02:0109       	dc.b	$09		; 0x69 - i
               S01:00FF0843:  09
F02:0110       	dc.b	$0A		; 0x6A - j
               S01:00FF0844:  0A
F02:0111       	dc.b	$0B		; 0x6B - k
               S01:00FF0845:  0B
F02:0112       	dc.b	$0C		; 0x6C - l
               S01:00FF0846:  0C
F02:0113       	dc.b	$0D		; 0x6D - m
               S01:00FF0847:  0D
F02:0114       	dc.b	$0E		; 0x6E - n
               S01:00FF0848:  0E
F02:0115       	dc.b	$0F		; 0x6F - o
               S01:00FF0849:  0F
F02:0116       	dc.b	$10		; 0x70 - p
               S01:00FF084A:  10
F02:0117       	dc.b	$11		; 0x71 - q
               S01:00FF084B:  11
F02:0118       	dc.b	$12		; 0x72 - r
               S01:00FF084C:  12
F02:0119       	dc.b	$13		; 0x73 - s
               S01:00FF084D:  13
F02:0120       	dc.b	$14		; 0x74 - t
               S01:00FF084E:  14
F02:0121       	dc.b	$15		; 0x75 - u
               S01:00FF084F:  15
F02:0122       	dc.b	$16		; 0x76 - v
               S01:00FF0850:  16
F02:0123       	dc.b	$17		; 0x77 - w
               S01:00FF0851:  17
F02:0124       	dc.b	$18		; 0x78 - x
               S01:00FF0852:  18
F02:0125       	dc.b	$19		; 0x79 - y
               S01:00FF0853:  19
F02:0126       	dc.b	$1A		; 0x7A - z
               S01:00FF0854:  1A
F02:0127       	dc.b	$64		; 0x7B - {	patched
               S01:00FF0855:  64
F02:0128       	dc.b	$65		; 0x7C - |	patched
               S01:00FF0856:  65
F02:0129       	dc.b	$66		; 0x7D - }	patched
               S01:00FF0857:  66
F02:0130       	dc.b	$67		; 0x7E - ~	patched
               S01:00FF0858:  67
F02:0131       	dc.b	$80		; 0x7F - DEL	non printable character
               S01:00FF0859:  80
F02:0132       
F02:0133       hex_table
F02:0134       	dc.b	'0123456789abcdef'
               S01:00FF085A:  30 31 32 33 34 35 36 37 38 39 61 62 63 64 65 66
F02:0135       
F02:0136       ;	The following table is based on a SID clock frequency of 985248Hz (PAL)
F02:0137       ;	Calculations were made according to Codebase64 article
F02:0138       ;	https://codebase64.org/doku.php?id=base:how_to_calculate_your_own_sid_frequency_table
F02:0139       ;
F02:0140       notes
F02:0141       	dc.w	$0116,$0127,$0139,$014B,$015F,$0174,$018A,$01A1,$01BA,$01D4,$01F0,$020E	; N_C0_ to N_B0_
               S01:00FF086A:  01 16
               S01:00FF086C:  01 27
               S01:00FF086E:  01 39
               S01:00FF0870:  01 4B
               S01:00FF0872:  01 5F
               S01:00FF0874:  01 74
               S01:00FF0876:  01 8A
               S01:00FF0878:  01 A1
               S01:00FF087A:  01 BA
               S01:00FF087C:  01 D4
               S01:00FF087E:  01 F0
               S01:00FF0880:  02 0E
F02:0142       	dc.w	$022D,$024E,$0271,$0296,$02BE,$02E7,$0314,$0342,$0374,$03A9,$03E0,$041B	; N_C1_ to N_B1_
               S01:00FF0882:  02 2D
               S01:00FF0884:  02 4E
               S01:00FF0886:  02 71
               S01:00FF0888:  02 96
               S01:00FF088A:  02 BE
               S01:00FF088C:  02 E7
               S01:00FF088E:  03 14
               S01:00FF0890:  03 42
               S01:00FF0892:  03 74
               S01:00FF0894:  03 A9
               S01:00FF0896:  03 E0
               S01:00FF0898:  04 1B
F02:0143       	dc.w	$045A,$049C,$04E2,$052D,$057B,$05CF,$0627,$0685,$06E8,$0751,$07C1,$0837	; N_C2_ to N_B2_
               S01:00FF089A:  04 5A
               S01:00FF089C:  04 9C
               S01:00FF089E:  04 E2
               S01:00FF08A0:  05 2D
               S01:00FF08A2:  05 7B
               S01:00FF08A4:  05 CF
               S01:00FF08A6:  06 27
               S01:00FF08A8:  06 85
               S01:00FF08AA:  06 E8
               S01:00FF08AC:  07 51
               S01:00FF08AE:  07 C1
               S01:00FF08B0:  08 37
F02:0144       	dc.w	$08B4,$0938,$09C4,$0A59,$0AF7,$0B9D,$0C4E,$0D0A,$0DD0,$0EA2,$0F81,$106D	; N_C3_ to N_B3_
               S01:00FF08B2:  08 B4
               S01:00FF08B4:  09 38
               S01:00FF08B6:  09 C4
               S01:00FF08B8:  0A 59
               S01:00FF08BA:  0A F7
               S01:00FF08BC:  0B 9D
               S01:00FF08BE:  0C 4E
               S01:00FF08C0:  0D 0A
               S01:00FF08C2:  0D D0
               S01:00FF08C4:  0E A2
               S01:00FF08C6:  0F 81
               S01:00FF08C8:  10 6D
F02:0145       	dc.w	$1167,$1270,$1389,$14B2,$15ED,$173B,$189C,$1A13,$1BA0,$1D45,$1F02,$20DA	; N_C4_ to N_B4_
               S01:00FF08CA:  11 67
               S01:00FF08CC:  12 70
               S01:00FF08CE:  13 89
               S01:00FF08D0:  14 B2
               S01:00FF08D2:  15 ED
               S01:00FF08D4:  17 3B
               S01:00FF08D6:  18 9C
               S01:00FF08D8:  1A 13
               S01:00FF08DA:  1B A0
               S01:00FF08DC:  1D 45
               S01:00FF08DE:  1F 02
               S01:00FF08E0:  20 DA
F02:0146       	dc.w	$22CE,$24E0,$2711,$2964,$2BDA,$2E76,$3139,$3426,$3740,$3A89,$3E04,$41B4	; N_C5_ to N_B5_
               S01:00FF08E2:  22 CE
               S01:00FF08E4:  24 E0
               S01:00FF08E6:  27 11
               S01:00FF08E8:  29 64
               S01:00FF08EA:  2B DA
               S01:00FF08EC:  2E 76
               S01:00FF08EE:  31 39
               S01:00FF08F0:  34 26
               S01:00FF08F2:  37 40
               S01:00FF08F4:  3A 89
               S01:00FF08F6:  3E 04
               S01:00FF08F8:  41 B4
F02:0147       	dc.w	$459C,$49C0,$4E23,$52C8,$57B4,$5CEB,$6272,$684C,$6E80,$7512,$7C08,$8368	; N_C6_ to N_B6_
               S01:00FF08FA:  45 9C
               S01:00FF08FC:  49 C0
               S01:00FF08FE:  4E 23
               S01:00FF0900:  52 C8
               S01:00FF0902:  57 B4
               S01:00FF0904:  5C EB
               S01:00FF0906:  62 72
               S01:00FF0908:  68 4C
               S01:00FF090A:  6E 80
               S01:00FF090C:  75 12
               S01:00FF090E:  7C 08
               S01:00FF0910:  83 68
F02:0148       	dc.w	$8B39,$9380,$9C45,$A590,$AF68,$B9D6,$C4E3,$D099,$DD00,$EA24,$F810	; N_C7_	to N_A7S
               S01:00FF0912:  8B 39
               S01:00FF0914:  93 80
               S01:00FF0916:  9C 45
               S01:00FF0918:  A5 90
               S01:00FF091A:  AF 68
               S01:00FF091C:  B9 D6
               S01:00FF091E:  C4 E3
               S01:00FF0920:  D0 99
               S01:00FF0922:  DD 00
               S01:00FF0924:  EA 24
               S01:00FF0926:  F8 10
F02:0149       
F02:0150       ;notes_old
F02:0151       ;	dc.w	$0112,$0123,$0134,$0146,$015a,$016e,$0184,$018b,$01b3,$01cd,$01e9,$0206	; N_C0_ to N_B0_
F02:0152       ;	dc.w	$0225,$0245,$0268,$028c,$02b3,$02dc,$0308,$0336,$0367,$039b,$03d2,$040c	; N_C1_ to N_B1_
F02:0153       ;	dc.w	$0449,$048b,$04d0,$0519,$0567,$05b9,$0610,$066c,$06ce,$0735,$07a3,$0817	; N_C2_ to N_B2_
F02:0154       ;	dc.w	$0893,$0915,$099f,$0a32,$0acd,$0b72,$0c20,$0cd8,$0d9c,$0e6b,$0f46,$102f	; N_C3_ to N_B3_
F02:0155       ;	dc.w	$1125,$122a,$133f,$1464,$159a,$16e3,$183f,$1981,$1b38,$1cd6,$1e80,$205e	; N_C4_ to N_B4_
F02:0156       ;	dc.w	$224b,$2455,$267e,$28c8,$2b34,$2dc6,$307f,$3361,$366f,$39ac,$3d1a,$40bc	; N_C5_ to N_B5_
F02:0157       ;	dc.w	$4495,$48a9,$4cfc,$518f,$5669,$5b8c,$60fe,$6602,$6cdf,$7358,$7a34,$8178	; N_C6_ to N_B6_
F02:0158       ;	dc.w	$892b,$9153,$99f7,$a31f,$acd2,$b719,$c1fc,$cd85,$d9bd,$e6b0,$f467	; N_C7_	to N_A7S
F00:0513       
F00:0514       	ORG	KERNEL_LOC+$FFFC
F00:0515       	DC.L	$DEADBEEF
               S02:00FFFFFC:  DE AD BE EF


Sections:
S01  segff0000
S02  segfffffc


Sources:
F00  kernel.asm
F01  kernel_definitions.asm
F02  kernel_tables.asm


Symbols:
hex_table EXPR(16713818=0xff085a) UNUSED ABS 
logo_bitmap EXPR(16712616=0xff03a8) UNUSED ABS 
play_song_frame EXPR(16712594=0xff0392) UNUSED ABS 
init_song EXPR(16712594=0xff0392) UNUSED ABS 
 copy_charrom_to_charram .4 EXPR(16712580=0xff0384) ABS 
 copy_charrom_to_charram .3 EXPR(16712576=0xff0380) ABS 
 copy_charrom_to_charram .2 EXPR(16712564=0xff0374) ABS 
 copy_charrom_to_charram .5 EXPR(16712588=0xff038c) ABS 
 copy_charrom_to_charram .1 EXPR(16712552=0xff0368) ABS 
 memcopy .1 EXPR(16712518=0xff0346) ABS 
timer_finish EXPR(16712450=0xff0302) ABS 
timer3_check EXPR(16712424=0xff02e8) ABS 
timer2_check EXPR(16712398=0xff02ce) ABS 
timer1_check EXPR(16712372=0xff02b4) ABS 
timer0_check EXPR(16712346=0xff029a) UNUSED ABS 
logo_blit_structure EXPR(16712594=0xff0392) ABS 
 put_string .2 EXPR(16712276=0xff0254) ABS 
 put_string .1 EXPR(16712266=0xff024a) ABS 
 put_char .1 EXPR(16712244=0xff0234) ABS 
ascii_to_screencode EXPR(16713690=0xff07da) ABS 
put_char EXPR(16712174=0xff01ee) ABS 
 clear_screen .1 EXPR(16712160=0xff01e0) ABS 
 mainloop .2 EXPR(16712078=0xff018e) ABS 
 mainloop .1 EXPR(16712056=0xff0178) ABS 
mainloop EXPR(16712048=0xff0170) UNUSED ABS 
notes EXPR(16713834=0xff086a) ABS 
put_string EXPR(16712264=0xff0248) ABS 
welcome EXPR(16713640=0xff07a8) ABS 
clear_screen EXPR(16712100=0xff01a4) ABS 
memcopy EXPR(16712514=0xff0342) ABS 
copy_charrom_to_charram EXPR(16712534=0xff0356) ABS 
timer3_handler EXPR(16712506=0xff033a) ABS 
timer2_handler EXPR(16712504=0xff0338) ABS 
timer1_handler EXPR(16712482=0xff0322) ABS 
timer0_handler EXPR(16712464=0xff0310) ABS 
interrupt_7_autovector EXPR(16712462=0xff030e) ABS 
interrupt_6_autovector EXPR(16712460=0xff030c) ABS 
interrupt_5_autovector EXPR(16712454=0xff0306) ABS 
interrupt_4_autovector EXPR(16712344=0xff0298) ABS 
interrupt_2_autovector EXPR(16712292=0xff0264) ABS 
exception_handler EXPR(16712280=0xff0258) ABS 
kernel_main EXPR(16711688=0xff0008) ABS 
TIMER3_VECTOR EXPR(32784=0x8010) EQU 
TIMER2_VECTOR EXPR(32780=0x800c) EQU 
TIMER1_VECTOR EXPR(32776=0x8008) EQU 
TIMER0_VECTOR EXPR(32772=0x8004) EQU 
CURSOR_POS EXPR(32770=0x8002) EQU 
CURR_TEXT_COLOR EXPR(32768=0x8000) EQU 
N_A7S EXPR(188=0xbc) UNUSED EQU 
N_A7_ EXPR(186=0xba) UNUSED EQU 
N_G7S EXPR(184=0xb8) UNUSED EQU 
N_G7_ EXPR(182=0xb6) UNUSED EQU 
N_F7S EXPR(180=0xb4) UNUSED EQU 
N_F7_ EXPR(178=0xb2) UNUSED EQU 
N_E7_ EXPR(176=0xb0) UNUSED EQU 
N_D7S EXPR(174=0xae) UNUSED EQU 
N_D7_ EXPR(172=0xac) UNUSED EQU 
N_C7S EXPR(170=0xaa) UNUSED EQU 
N_C7_ EXPR(168=0xa8) UNUSED EQU 
N_B6_ EXPR(166=0xa6) UNUSED EQU 
N_A6S EXPR(164=0xa4) UNUSED EQU 
N_A6_ EXPR(162=0xa2) UNUSED EQU 
N_G6S EXPR(160=0xa0) UNUSED EQU 
N_G6_ EXPR(158=0x9e) UNUSED EQU 
N_F6S EXPR(156=0x9c) UNUSED EQU 
N_F6_ EXPR(154=0x9a) UNUSED EQU 
N_E6_ EXPR(152=0x98) UNUSED EQU 
N_D6S EXPR(150=0x96) UNUSED EQU 
N_D6_ EXPR(148=0x94) UNUSED EQU 
N_C6S EXPR(146=0x92) UNUSED EQU 
N_C6_ EXPR(144=0x90) UNUSED EQU 
N_B5_ EXPR(142=0x8e) UNUSED EQU 
N_A5S EXPR(140=0x8c) UNUSED EQU 
N_A5_ EXPR(138=0x8a) UNUSED EQU 
N_G5S EXPR(136=0x88) UNUSED EQU 
N_G5_ EXPR(134=0x86) UNUSED EQU 
N_F5S EXPR(132=0x84) UNUSED EQU 
N_F5_ EXPR(130=0x82) UNUSED EQU 
N_E5_ EXPR(128=0x80) UNUSED EQU 
N_D5S EXPR(126=0x7e) UNUSED EQU 
N_D5_ EXPR(124=0x7c) UNUSED EQU 
N_C5S EXPR(122=0x7a) UNUSED EQU 
N_C5_ EXPR(120=0x78) UNUSED EQU 
N_B4_ EXPR(118=0x76) UNUSED EQU 
N_A4S EXPR(116=0x74) UNUSED EQU 
N_A4_ EXPR(114=0x72) UNUSED EQU 
N_G4S EXPR(112=0x70) UNUSED EQU 
N_G4_ EXPR(110=0x6e) UNUSED EQU 
N_F4S EXPR(108=0x6c) UNUSED EQU 
N_F4_ EXPR(106=0x6a) UNUSED EQU 
N_E4_ EXPR(104=0x68) UNUSED EQU 
N_D4S EXPR(102=0x66) UNUSED EQU 
N_D4_ EXPR(100=0x64) UNUSED EQU 
N_C4S EXPR(98=0x62) UNUSED EQU 
N_C4_ EXPR(96=0x60) UNUSED EQU 
N_B3_ EXPR(94=0x5e) UNUSED EQU 
N_A3S EXPR(92=0x5c) UNUSED EQU 
N_A3_ EXPR(90=0x5a) EQU 
N_G3S EXPR(88=0x58) UNUSED EQU 
N_G3_ EXPR(86=0x56) UNUSED EQU 
N_F3S EXPR(84=0x54) UNUSED EQU 
N_F3_ EXPR(82=0x52) UNUSED EQU 
N_E3_ EXPR(80=0x50) UNUSED EQU 
N_D3S EXPR(78=0x4e) UNUSED EQU 
N_D3_ EXPR(76=0x4c) EQU 
N_C3S EXPR(74=0x4a) UNUSED EQU 
N_C3_ EXPR(72=0x48) UNUSED EQU 
N_B2_ EXPR(70=0x46) UNUSED EQU 
N_A2S EXPR(68=0x44) UNUSED EQU 
N_A2_ EXPR(66=0x42) UNUSED EQU 
N_G2S EXPR(64=0x40) UNUSED EQU 
N_G2_ EXPR(62=0x3e) UNUSED EQU 
N_F2S EXPR(60=0x3c) UNUSED EQU 
N_F2_ EXPR(58=0x3a) UNUSED EQU 
N_E2_ EXPR(56=0x38) UNUSED EQU 
N_D2S EXPR(54=0x36) UNUSED EQU 
N_D2_ EXPR(52=0x34) UNUSED EQU 
N_C2S EXPR(50=0x32) UNUSED EQU 
N_C2_ EXPR(48=0x30) UNUSED EQU 
N_B1_ EXPR(46=0x2e) UNUSED EQU 
N_A1S EXPR(44=0x2c) UNUSED EQU 
N_A1_ EXPR(42=0x2a) UNUSED EQU 
N_G1S EXPR(40=0x28) UNUSED EQU 
N_G1_ EXPR(38=0x26) UNUSED EQU 
N_F1S EXPR(36=0x24) UNUSED EQU 
N_F1_ EXPR(34=0x22) UNUSED EQU 
N_E1_ EXPR(32=0x20) UNUSED EQU 
N_D1S EXPR(30=0x1e) UNUSED EQU 
N_D1_ EXPR(28=0x1c) UNUSED EQU 
N_C1S EXPR(26=0x1a) UNUSED EQU 
N_C1_ EXPR(24=0x18) UNUSED EQU 
N_B0_ EXPR(22=0x16) UNUSED EQU 
N_A0S EXPR(20=0x14) UNUSED EQU 
N_A0_ EXPR(18=0x12) UNUSED EQU 
N_G0S EXPR(16=0x10) UNUSED EQU 
N_G0_ EXPR(14=0xe) UNUSED EQU 
N_F0S EXPR(12=0xc) UNUSED EQU 
N_F0_ EXPR(10=0xa) UNUSED EQU 
N_E0_ EXPR(8=0x8) UNUSED EQU 
N_D0S EXPR(6=0x6) UNUSED EQU 
N_D0_ EXPR(4=0x4) UNUSED EQU 
N_C0S EXPR(2=0x2) UNUSED EQU 
N_C0_ EXPR(0=0x0) UNUSED EQU 
SID1_RGHT EXPR(131=0x83) EQU 
SID1_LEFT EXPR(130=0x82) EQU 
SID0_RGHT EXPR(129=0x81) EQU 
SID0_LEFT EXPR(128=0x80) EQU 
SID2_BASE EXPR(16647488=0xfe0540) UNUSED EQU 
SID1_BASE EXPR(16647456=0xfe0520) EQU 
SID0_BASE EXPR(16647424=0xfe0500) EQU 
SOUND_BASE EXPR(16647424=0xfe0500) EQU 
C64_LIGHTGREY EXPR(64170=0xfaaa) UNUSED EQU 
C64_LIGHTBLUE EXPR(63101=0xf67d) UNUSED EQU 
C64_LIGHTGREEN EXPR(64506=0xfbfa) UNUSED EQU 
C64_GREY EXPR(63351=0xf777) EQU 
C64_DARKGREY EXPR(62532=0xf444) UNUSED EQU 
C64_LIGHTRED EXPR(64375=0xfb77) UNUSED EQU 
C64_BROWN EXPR(62769=0xf531) UNUSED EQU 
C64_ORANGE EXPR(63571=0xf853) UNUSED EQU 
C64_YELLOW EXPR(65256=0xfee8) UNUSED EQU 
C64_BLUE EXPR(62265=0xf339) EQU 
C64_GREEN EXPR(63141=0xf6a5) UNUSED EQU 
C64_PURPLE EXPR(63561=0xf849) UNUSED EQU 
C64_CYAN EXPR(63692=0xf8cc) UNUSED EQU 
C64_RED EXPR(63283=0xf733) UNUSED EQU 
C64_WHITE EXPR(65535=0xffff) UNUSED EQU 
C64_BLACK EXPR(61440=0xf000) EQU 
BLITTER_DATA_32_BIT EXPR(16647938=0xfe0702) EQU 
BLITTER_DATA_16_BIT EXPR(16647940=0xfe0704) EQU 
BLITTER_CONTROL EXPR(16647936=0xfe0700) EQU 
BLITTER_BASE EXPR(16647936=0xfe0700) EQU 
VICV_BUFFERSWAP EXPR(16647184=0xfe0410) EQU 
VICV_ISR EXPR(16647182=0xfe040e) EQU 
VICV_BORDER_SIZE EXPR(16647180=0xfe040c) EQU 
VICV_COL EXPR(16647176=0xfe0408) EQU 
VICV_TXT EXPR(16647172=0xfe0404) EQU 
VICV_BACKGROUND_COLOR EXPR(16647170=0xfe0402) EQU 
VICV_BORDER_COLOR EXPR(16647168=0xfe0400) EQU 
VICV_BASE EXPR(16647168=0xfe0400) EQU 
TIMER_BASE EXPR(16647680=0xfe0600) EQU 
CIA_BASE EXPR(16646912=0xfe0300) EQU 
CHAR_RAM EXPR(15007744=0xe50000) EQU 
CHAR_ROM EXPR(16580608=0xfd0000) EQU 
ASCII_LF EXPR(10=0xa) EQU 
ASCII_NULL EXPR(0=0x0) EQU 
VEC_31_LEVEL7_IRQ_AUTOVECT EXPR(124=0x7c) EQU 
VEC_30_LEVEL6_IRQ_AUTOVECT EXPR(120=0x78) EQU 
VEC_29_LEVEL5_IRQ_AUTOVECT EXPR(116=0x74) EQU 
VEC_28_LEVEL4_IRQ_AUTOVECT EXPR(112=0x70) EQU 
VEC_27_LEVEL3_IRQ_AUTOVECT EXPR(108=0x6c) UNUSED EQU 
VEC_26_LEVEL2_IRQ_AUTOVECT EXPR(104=0x68) EQU 
VEC_11_UNIMPL_INSTRUCTION EXPR(44=0x2c) EQU 
VEC_10_UNIMPL_INSTRUCTION EXPR(40=0x28) EQU 
VEC_04_ILLEGAL_INSTRUCTION EXPR(16=0x10) EQU 
KERNEL_LOC EXPR(16711680=0xff0000) EQU 
_MOVEMBYTES EXPR(16=0x10) INTERNAL 
 MOVEMSIZE EXPR(4=0x4) INTERNAL 
_MOVEMREGS EXPR(771=0x303) INTERNAL 
__LINE__ EXPR(515=0x203) INTERNAL 
__FO EXPR(0=0x0) INTERNAL 
__RS EXPR(0=0x0) INTERNAL 
REPTN EXPR(-1=0xffffffff) INTERNAL 
__VASM EXPR(1=0x1) INTERNAL 

There have been no errors.
